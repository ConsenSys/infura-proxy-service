{"version":3,"sources":["settings/apollo.js","providers.jsx","components/Section.jsx","components/MaterialContractTable.jsx","graphql/query_strings.js","graphql/useContractListQuery.jsx","containers/ContractDetails.jsx","components/ContractEventMetaTable.jsx","graphql/useContractEventMetaListQuery.jsx","containers/ContractEventMetaDetails.jsx","components/ContractEventTable.jsx","graphql/useContractEventListQuery.jsx","containers/ContractEventDetails.jsx","forms/FormContractRawUpload/sample.js","forms/FormContractRawUpload/index.jsx","App.js","serviceWorker.js","index.js"],"names":["process","REACT_APP_DEVELOPMENT_API_GRAPHQL","REACT_APP_DEVELOPMENT_API_GRAPHQL_WS","console","log","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","query","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","headers","token","localStorage","getItem","errorLink","onError","graphQLErrors","networkError","forEach","message","locations","path","statusCode","link","from","cache","InMemoryCache","client","ApolloClient","props","children","Section","className","useStyles","makeStyles","table","minWidth","SimpleTable","data","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","name","address","event_topics","gql","GET_CONTRACT_LIST","GET_EVENT_LIST","GET_EVENT_META_LIST","useContractQuery","limit","page","React","useState","parsed","setParsed","useQuery","variables","loading","error","refetch","useMemo","Array","isArray","contractList","l","d","i","Object","keys","k","JSON","parse","ContractDetails","contracts","useContractListQuery","idx","_","event_name","event_bare_name","event_topic_hash","eventMetaList","ContractEventMetaDetails","eventsMeta","useContractEventMetaListQuery","event_abi","contract_address","transaction_hash","useContractEventListQuery","eventList","ContractEventDetails","events","abi","inputs","internalType","type","payable","stateMutability","anonymous","indexed","constant","outputs","FormContractRawUpload","horizontal","sx","useForm","defaultValues","stringify","handleSubmit","register","as","onSubmit","values","axios","post","bytecode","then","response","catch","placeholder","ref","required","pattern","value","bg","color","flex","width","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df6cff00.chunk.js","sourcesContent":["import {ApolloClient} from 'apollo-client';\nimport {getMainDefinition} from 'apollo-utilities';\nimport {ApolloLink, split} from 'apollo-link';\nimport {HttpLink} from 'apollo-link-http';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport {onError} from 'apollo-link-error';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst {\n  REACT_APP_DEVELOPMENT_API_GRAPHQL,\n  REACT_APP_DEVELOPMENT_API_GRAPHQL_WS,\n} = process.env;\n\nconsole.log(\n  REACT_APP_DEVELOPMENT_API_GRAPHQL_WS,\n  'REACT_APP_DEVELOPMENT_API_GRAPHQL_WS',\n);\n\nconst httpLink = new HttpLink({\n  uri: REACT_APP_DEVELOPMENT_API_GRAPHQL,\n});\n\nconst wsLink = new WebSocketLink({\n  uri: REACT_APP_DEVELOPMENT_API_GRAPHQL_WS,\n  options: {\n    reconnect: true,\n  },\n});\n\nconst terminatingLink = split(\n  ({query}) => {\n    const {kind, operation} = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  httpLink,\n);\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({headers = {}}) => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      headers = {...headers, 'x-token': token};\n    }\n\n    return {headers};\n  });\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({graphQLErrors, networkError}) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({message, locations, path}) => {\n      console.log('GraphQL error', message);\n\n      if (message === 'UNAUTHENTICATED') {\n        // signOut(client);\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log('Network error', networkError);\n\n    if (networkError.statusCode === 401) {\n      // signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink]);\n\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  link,\n  cache,\n});\n","/* --- Global --- */\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\n/* --- Local --- */\n\nimport { client } from \"./settings/apollo\";\n\n/* --- Component --- */\nexport default (props) => {\n  return (\n    <ApolloProvider client={client}>\n      <div>{props.children}</div>\n    </ApolloProvider>\n  );\n};\n","import React from \"react\";\n/* --- Component --- */\nconst Section = ({ children }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">{children}</div>\n    </div>\n  );\n};\nexport default Section;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function SimpleTable({ data = [] }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"left\">Address</TableCell>\n            <TableCell align=\"left\">Event Topics</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"left\">{row.address}</TableCell>\n              <TableCell align=\"left\">{row.event_topics}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import gql from \"graphql-tag\";\n\n/* ----------------------- */\n// Contract : Query\n/* ----------------------- */\nexport const GET_CONTRACT = gql`\n  query($address: ID!) {\n    contract(address: $address) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }\n`;\n\nexport const GET_CONTRACT_LIST = gql`\n  query($limit: Int) {\n    contractList(limit: $limit) {\n      address\n      name\n      abi\n      event_topics\n    }\n  }\n`;\n\nexport const CONTRACT_CREATED = gql`\n  subscription {\n    contractCreated {\n      contract {\n        address\n        name\n        abi\n        event_topics\n      }\n    }\n  }\n`;\n\n/* ----------------------- */\n// Event : Query\n/* ----------------------- */\nexport const GET_EVENT = gql`\n  query($hash: ID!) {\n    event(hash: $hash) {\n      transaction_hash\n      event_topic_hash\n      contract_address\n    }\n  }\n`;\n\nexport const GET_EVENT_LIST = gql`\n  query($limit: Int, $filters: EventFilters) {\n    eventList(limit: $limit, filters: $filters) {\n      transaction_hash\n      event_topic_hash\n      contract_address\n      event_abi\n      raw_event\n      json_event\n      createdAt\n    }\n  }\n`;\n\nexport const EVENT_CREATED = gql`\n  subscription {\n    eventCreated {\n      event {\n        transaction_hash\n        event_topic_hash\n        contract_address\n        event_abi\n        raw_event\n        json_event\n      }\n    }\n  }\n`;\n\n/* ----------------------- */\n// Event : Query\n/* ----------------------- */\nexport const GET_EVENT_META = gql`\n  query($hash: ID!) {\n    eventMeta(hash: $hash) {\n      event_topic_hash\n      event_name\n      event_bare_name\n    }\n  }\n`;\n\nexport const GET_EVENT_META_LIST = gql`\n  query($limit: Int) {\n    eventMetaList(limit: $limit) {\n      event_topic_hash\n      event_name\n      event_bare_name\n      event_abi\n    }\n  }\n`;\n\nexport const EVENT_META_CREATED = gql`\n  subscription {\n    eventMetaCreated {\n      eventMeta {\n        event_topic_hash\n        event_name\n        event_bare_name\n      }\n    }\n  }\n`;\n\n/* ----------------------- */\n// Transaction : Query\n/* ----------------------- */\nexport const GET_TRANSACTION = gql`\n  query($hash: ID!) {\n    transaction(hash: $hash) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }\n`;\n\nexport const GET_TRANSACTIONS = gql`\n  query($limit: Int) {\n    transactions(limit: $limit) {\n      hash\n      blockHash\n      blockNumber\n      to\n      from\n      data\n      gasLimit {\n        _hex\n      }\n      gasPrice {\n        _hex\n      }\n      transactionIndex\n      nonce\n      confirmations\n    }\n  }\n`;\n\nexport const TRANSACTION_CREATED = gql`\n  subscription {\n    transactionCreated {\n      transaction {\n        hash\n        blockHash\n        blockNumber\n        to\n        from\n        data\n        gasLimit {\n          _hex\n        }\n        gasPrice {\n          _hex\n        }\n        transactionIndex\n        nonce\n        confirmations\n      }\n    }\n  }\n`;\n\n/* ----------------------- */\n// Block : Query\n/* ----------------------- */\nexport const GET_BLOCK = gql`\n  query($hash: ID!) {\n    block(hash: $hash) {\n      hash\n      parentHash\n      hash\n      parentHash\n      number\n      timestamp\n      nonce\n      difficulty\n      gasLimit {\n        _hex\n      }\n      gasUsed {\n        _hex\n      }\n      miner\n      extraData\n      transactions\n    }\n  }\n`;\n\nexport const GET_BLOCKS = gql`\n  query($limit: Int) {\n    blockList(limit: $limit) {\n      hash\n      parentHash\n      hash\n      parentHash\n      number\n      timestamp\n      nonce\n      difficulty\n      gasLimit {\n        _hex\n      }\n      gasUsed {\n        _hex\n      }\n      miner\n      extraData\n      transactions\n    }\n  }\n`;\n\nexport const BLOCK_CREATED = gql`\n  subscription {\n    blockCreated {\n      block {\n        hash\n        parentHash\n        hash\n        parentHash\n        number\n        timestamp\n        nonce\n        difficulty\n        gasLimit {\n          _hex\n        }\n        gasUsed {\n          _hex\n        }\n        miner\n        extraData\n        transactions\n      }\n    }\n  }\n`;\n","/* --- Global --- */\nimport React from \"react\";\nimport { useQuery } from \"react-apollo\";\n\n/* --- Local --- */\nimport { GET_CONTRACT_LIST } from \"./query_strings.js\";\n\n/**\n * @name useContractQuery\n * @param {Object} filters\n * @param {Integer} limit\n * @param {Function} children\n */\nconst useContractQuery = ({ limit, page }) => {\n  const [parsed, setParsed] = React.useState();\n  const { loading, error, data, refetch } = useQuery(GET_CONTRACT_LIST, {\n    variables: {\n      limit,\n      page,\n    },\n  });\n\n  React.useMemo(() => {\n    if (data && Array.isArray(data.contractList)) {\n      const l = data.contractList.map((d) => {\n        let i = {};\n        Object.keys(d).forEach((k) => {\n          if (k === \"event_topics\") {\n            i[k] = JSON.parse(d[k]);\n          } else {\n            i[k] = d[k];\n          }\n        });\n        return i;\n      });\n      console.log(l);\n      setParsed(l);\n    }\n  }, [data]);\n\n  return {\n    data,\n    parsed,\n    loading,\n    error,\n    refetch,\n  };\n};\n\nexport default useContractQuery;\n","/* --- Global --- */\nimport idx from \"idx\";\nimport React from \"react\";\n\n/* --- Local --- */\nimport Table from \"../components/MaterialContractTable\";\nimport useContractListQuery from \"../graphql/useContractListQuery\";\n\n/* --- Component --- */\nconst ContractDetails = ({ address }) => {\n  const contracts = useContractListQuery(address);\n\n  return (\n    <div>\n      <h1>Contracts</h1>\n      <Table data={idx(contracts, (_) => _.parsed)} />\n    </div>\n  );\n};\nexport default ContractDetails;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function SimpleTable({ data = [] }) {\n  const classes = useStyles();\n\n  console.log(data, \"datadata\");\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Event Name</TableCell>\n            <TableCell align=\"left\">Event Bare Name</TableCell>\n            <TableCell align=\"left\">Event Hash</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"left\">{row.event_name}</TableCell>\n              <TableCell align=\"left\">{row.event_bare_name}</TableCell>\n              <TableCell align=\"left\">{row.event_topic_hash}</TableCell>\n              <TableCell align=\"left\">{row.event_topics}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/* --- Global --- */\nimport React from \"react\";\nimport { useQuery } from \"react-apollo\";\n\n/* --- Local --- */\nimport { GET_EVENT_META_LIST } from \"./query_strings.js\";\n\n/**\n * @name useContractQuery\n * @param {Object} filters\n * @param {Integer} limit\n * @param {Function} children\n */\nconst useContractQuery = ({ limit, page }) => {\n  const [parsed, setParsed] = React.useState();\n  const { loading, error, data, refetch } = useQuery(GET_EVENT_META_LIST, {\n    variables: {\n      limit,\n      page,\n    },\n  });\n\n  React.useMemo(() => {\n    console.log(data, \"GET_EVENT_META_LIST\");\n    if (data && Array.isArray(data.eventMetaList)) {\n      const l = data.eventMetaList.map((d) => {\n        let i = {};\n        Object.keys(d).forEach((k) => {\n          if (k === \"event_abi\") {\n            i[k] = JSON.parse(d[k]);\n          } else {\n            i[k] = d[k];\n          }\n        });\n        return i;\n      });\n      console.log(l);\n      setParsed(l);\n    }\n  }, [data]);\n\n  return {\n    data,\n    parsed,\n    loading,\n    error,\n    refetch,\n  };\n};\n\nexport default useContractQuery;\n","/* --- Global --- */\nimport idx from \"idx\";\nimport React from \"react\";\n\n/* --- Local --- */\nimport Table from \"../components/ContractEventMetaTable\";\nimport useContractEventMetaListQuery from \"../graphql/useContractEventMetaListQuery\";\n\n/* --- Component --- */\nconst ContractEventMetaDetails = ({ address }) => {\n  const eventsMeta = useContractEventMetaListQuery(address);\n  return (\n    <div>\n      <h1>Contracts Event Meta</h1>\n      <Table data={idx(eventsMeta, (_) => _.parsed)} />\n    </div>\n  );\n};\nexport default ContractEventMetaDetails;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function SimpleTable({ data = [] }) {\n  const classes = useStyles();\n\n  console.log(data, \"datadata\");\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"left\">Contract</TableCell>\n            <TableCell align=\"left\">Transaction Hash</TableCell>\n            <TableCell align=\"left\">Event Topic Hash</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"left\">{row.event_abi.name}</TableCell>\n              <TableCell align=\"left\">{row.contract_address}</TableCell>\n              <TableCell align=\"left\">{row.transaction_hash}</TableCell>\n              <TableCell align=\"left\">{row.event_topic_hash}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst useConvertValuesToDisplay = (values) => {\n  const [list, setList] = React.useState([]);\n\n  React.useEffect(() => {\n    const l = Object.keys(values).map((k) => {\n      if (typeof values[k] === \"string\") {\n        return values[k];\n      }\n    });\n    setList(l);\n\n    console.log(l);\n  }, [values]);\n\n  return list;\n};\n","/* --- Global --- */\nimport React from \"react\";\nimport { useQuery } from \"react-apollo\";\n\n/* --- Local --- */\nimport { GET_EVENT_LIST } from \"./query_strings.js\";\n\n/**\n * @name useContractEventListQuery\n * @param {Object} filters\n * @param {Integer} limit\n * @param {Function} children\n */\nconst useContractEventListQuery = ({ limit, page }) => {\n  const [parsed, setParsed] = React.useState();\n  const { loading, error, data, refetch } = useQuery(GET_EVENT_LIST, {\n    variables: {\n      limit,\n      page,\n    },\n  });\n\n  React.useMemo(() => {\n    console.log(data, \"GET_EVENT_LIST\");\n    if (data && Array.isArray(data.eventList)) {\n      const l = data.eventList.map((d) => {\n        let i = {};\n        Object.keys(d).forEach((k) => {\n          if (k === \"event_abi\" || k === \"raw_event\" || k === \"json_event\") {\n            i[k] = JSON.parse(d[k]);\n          } else {\n            i[k] = d[k];\n          }\n        });\n        return i;\n      });\n      console.log(l);\n      setParsed(l);\n    }\n  }, [data]);\n\n  return {\n    data,\n    parsed,\n    loading,\n    error,\n    refetch,\n  };\n};\n\nexport default useContractEventListQuery;\n","/* --- Global --- */\nimport idx from \"idx\";\nimport React from \"react\";\n\n/* --- Local --- */\nimport Table from \"../components/ContractEventTable\";\nimport useContractEventListQuery from \"../graphql/useContractEventListQuery\";\n\n/* --- Component --- */\nconst ContractEventDetails = ({ address }) => {\n  const events = useContractEventListQuery(address);\n  return (\n    <div>\n      <h1>Contracts Event</h1>\n      <Table data={idx(events, (_) => _.parsed)} />\n    </div>\n  );\n};\nexport default ContractEventDetails;\n","export const address = '0x588f2304b0fac8b9eb7d1ff4c84a1279a1c73796';\nexport const abi2 = [\n  {\n    name: 'NewExchange',\n    inputs: [\n      {type: 'address', name: 'token', indexed: true},\n      {type: 'address', name: 'exchange', indexed: true},\n    ],\n    anonymous: false,\n    type: 'event',\n  },\n  {\n    name: 'initializeFactory',\n    outputs: [],\n    inputs: [{type: 'address', name: 'template'}],\n    constant: false,\n    payable: false,\n    type: 'function',\n    stateMutability: 'nonpayable',\n    gas: 35725,\n  },\n  {\n    name: 'createExchange',\n    outputs: [{type: 'address', name: 'out'}],\n    inputs: [{type: 'address', name: 'token'}],\n    constant: false,\n    payable: false,\n    type: 'function',\n    stateMutability: 'nonpayable',\n    gas: 187911,\n  },\n  {\n    name: 'getExchange',\n    outputs: [{type: 'address', name: 'out'}],\n    inputs: [{type: 'address', name: 'token'}],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 715,\n  },\n  {\n    name: 'getToken',\n    outputs: [{type: 'address', name: 'out'}],\n    inputs: [{type: 'address', name: 'exchange'}],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 745,\n  },\n  {\n    name: 'getTokenWithId',\n    outputs: [{type: 'address', name: 'out'}],\n    inputs: [{type: 'uint256', name: 'token_id'}],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 736,\n  },\n  {\n    name: 'exchangeTemplate',\n    outputs: [{type: 'address', name: 'out'}],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 633,\n  },\n  {\n    name: 'tokenCount',\n    outputs: [{type: 'uint256', name: 'out'}],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: 'function',\n    gas: 663,\n  },\n];\nexport const abi = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: '_name',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: '_symbol',\n        type: 'string',\n      },\n      {\n        internalType: 'uint8',\n        name: '_decimals',\n        type: 'uint8',\n      },\n      {\n        internalType: 'uint256',\n        name: '_initialSupply',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: '_totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'addedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'increaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'subtractedValue',\n        type: 'uint256',\n      },\n    ],\n    name: 'decreaseAllowance',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","/* --- Global --- */\nimport React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nimport { abi, address } from \"./sample\";\n\n/**\n * @name FormContractRawUpload\n * @description Capture feedback from users.\n * @version 0.0.1\n */\n\nconst FormContractRawUpload = ({ horizontal, sx, ...props }) => {\n  /* --- Form Hook State --- */\n  const { handleSubmit, register } = useForm({\n    defaultValues: {\n      address: address,\n      name: \"Token\",\n      abi: JSON.stringify(abi),\n    },\n  });\n\n  /* --- Submit Handler --- */\n  const onSubmit = (values) => {\n    if (values) {\n      axios\n        .post(\"http://localhost:3131/contract/raw/\", {\n          address: values.address,\n          name: values.name,\n          abi: JSON.parse(values.abi),\n          bytecode: values.bytecode,\n        })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <form\n      as=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"form-contract-raw-upload\"\n    >\n      <input\n        name=\"name\"\n        placeholder=\"Name\"\n        ref={register({\n          required: \"Required\",\n        })}\n      />\n      <input\n        name=\"address\"\n        placeholder=\"Address\"\n        ref={register({\n          required: \"Required\",\n          pattern: {\n            value: !/^(0x)?[0-9a-f]{40}$/i,\n            message: \"invalid email address\",\n          },\n        })}\n      />\n      <textarea\n        name=\"abi\"\n        as=\"textarea\"\n        placeholder=\"ABI\"\n        ref={register({\n          required: \"Required\",\n        })}\n      />\n      <button bg=\"orange\" color=\"white\" sx={{ flex: 1, width: \"100%\" }}>\n        Setup Cache Endpoint\n      </button>\n    </form>\n  );\n};\n\nFormContractRawUpload.defaultProps = {\n  sx: {},\n};\n\nFormContractRawUpload.propTypes = {\n  styled: PropTypes.object,\n};\n\nexport default FormContractRawUpload;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Providers from \"./providers\";\nimport Section from \"./components/Section\";\n// Tables\nimport ContractDetails from \"./containers/ContractDetails\";\nimport ContractEventMetaDetails from \"./containers/ContractEventMetaDetails\";\nimport ContractEventDetails from \"./containers/ContractEventDetails\";\n//Forms\nimport FormContractRawUpload from \"./forms/FormContractRawUpload\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Providers>\n        <Section>\n          <ContractDetails address=\"0x8315DA5a0E713F9A9b2260772A06046EA72a9cC5\" />\n          <ContractEventMetaDetails address=\"0x8315DA5a0E713F9A9b2260772A06046EA72a9cC5\" />\n          <ContractEventDetails address=\"0x8315DA5a0E713F9A9b2260772A06046EA72a9cC5\" />\n        </Section>\n        <Section>\n          <h1>Create Contract Cache</h1>\n          <FormContractRawUpload />\n        </Section>\n      </Providers>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}